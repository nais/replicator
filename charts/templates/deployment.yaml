apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "replicator.fullname" . }}-controller-manager
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: replicator
    app.kubernetes.io/part-of: replicator
  {{- include "replicator.labels" . | nindent 4 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "replicator.fullname" . }}-controller-manager
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: replicator
    app.kubernetes.io/part-of: replicator
    control-plane: controller-manager
  {{- include "replicator.labels" . | nindent 4 }}
  {{- if .Values.deploymentAnnotations }}
  annotations: {{- toYaml .Values.deploymentAnnotations | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      control-plane: controller-manager
    {{- include "replicator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        control-plane: controller-manager
        app: {{ .Release.Name }}
      {{- include "replicator.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: replicator
    spec:
      containers:
      - args:
        - --leader-elect
        - --sync-interval={{ .Values.syncInterval }}
        command:
        - /manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: cluster.local
        - name: DEBUG
          value: "{{ .Values.debug }}"
        image: {{ .Values.image.repository }}:{{ .Chart.Version }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: replicator
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 8080
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {{- toYaml .Values.resources | nindent 10
          }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: {{ include "replicator.fullname" . }}-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: {{ .Release.Name }}-webhook-server-cert
